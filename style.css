@import url('https://fonts.googleapis.com/css2?family=Luckiest+Guy&display=swap');

body {
  display: flex;
  background-color: hsl(0, 0%, 0%);
  justify-content: center;
  align-items: center;
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}

/* board title */

.title {
  position: absolute;
  width: 80vmin;
  height: 80vmin;
  display: grid;
}

.bend {
  position: relative;
  height: 100%;
  width: 100%;
  margin: 0 auto;
  font-size: 15vmin;
  font-family: 'Luckiest Guy', cursive;
  color: hsl(300, 60%, 15%);
  text-shadow: 0 0 10px hsl(300, 20%, 100%);
}

.bend span:nth-of-type(1)  {
  transform: rotate(65deg);
}
.bend span:nth-of-type(2)  {
  transform: rotate(40deg);
}
.bend span:nth-of-type(3)  {
  transform: rotate(15deg);
}
.bend span:nth-of-type(4)  {
  transform: rotate(-15deg);
}
.bend span:nth-of-type(5)  {
  transform: rotate(-40deg);
}
.bend span:nth-of-type(6)  {
  transform: rotate(-65deg);
}

.bend span {
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 12vmin;
  height: 45vmin;
  margin-left: -6vmin; /* width / 2 */
  line-height: calc(90vmin - 10vmin); /*height * 2 - font-size * 0.75 */
  text-align: center;
  transform-origin: top center;
  /* for debug */
  /* border: 1px solid red; */
}

.inverse span {
  margin-bottom: -6vmin;
  line-height: 100%;
  transform-origin: bottom center;
  /* for debug */
  /* border: 1px solid red; */
}

/* board div */

#board-main {
  display: grid;
  grid-template-rows: 0.9fr auto;
  justify-items: center;
  height: 96vmin;
  width: 96vmin;
  background-color: hsl(300, 50%, 90%);
  padding: 2vmin;
  border-radius: 3vmin;
}

#board-set {
  width: calc(100% - 4vmin);
  background: radial-gradient(hsl(300, 40%, 80%), hsl(300, 40%, 40%) 60%);
  padding: 1vmin;
  box-shadow: 0 0 10px black;
  border-radius: 2vmin;
  display: flex;
  justify-content: center;
  align-items: center;
}

#board-cards {
  position: relative;
  background-color: hsla(0, 60%, 40%, 0.6);
  border-radius: 1vmin;
  width: calc(var(--boardCardWidth) * 8vmin + 1vmin);
  height: calc(var(--boardCardHeight) * 11vmin + 1vmin);
  perspective: 500px;
  box-shadow: 0 0 10px black;
}

#board-info {
  width: calc(100% - 4vmin);
  height: 50px;
  border-radius: 3vmin;
  display: flex;
  padding: 0 1vmin;
  align-items: center;
  grid-template-columns: 0.2fr 0.8fr;
  gap: 2vmin;
}

.messageBox {
  width: 100%;
  height: 100%;
  display: grid;
  grid-auto-rows: auto;
  grid-auto-flow: row;
  justify-items: center;
  align-content: flex-start;
  row-gap: 5vmin;
  padding-top: 5vmin;
}

.messageBox.gameover {
  align-content: space-around;
  row-gap: 0;
  padding-top: 0;
}

.messageBox span {
  font-family: 'Luckiest Guy', cursive;
  font-size: 10vmin;
  color: hsl(300, 20%, 75%);
  text-shadow: 0 0 7px hsl(300, 20%, 80%);
  animation: show 200ms ease-in-out;
}

.messageBox span.question {
  font-size: 5vmin;
}

@keyframes show {
  0% {
    opacity: .5;
    transform: scale(0);
  }
}

.anotherGame {
  width: 10vmin;
  height: 10vmin;
  background-image: url('Assets/Shapes/playButton.png');
  background-size: contain;
  transition: all 400ms ease;
}

.anotherGame:hover {
  transform: scale(1.1);
  transition: all 400ms ease;
}

/* button */

#startButton {
  position: absolute;
  margin: auto;
  margin-left: 50vw;
  margin-right: 50vw;
  margin-top: 45vh;
  margin-bottom: 45vh;
  z-index: 1;
  width: 20vmin;
  height: 20vmin;
  transition: all 300ms ease;
}

#startButton.hide {
  transform: scale(0);
  transition: all 300ms ease;
}

#startButton.inGame {
  margin-left: calc(50vw + 40vmin);
  margin-right: calc(50vw - 40vmin);
  margin-top: calc(35vh - 25vmin);
  margin-bottom: calc(45vh + 30vmin);
  width: 10vmin;
  height: 10vmin;
  transition: all 1000ms ease;
}

#imageButton {
  width: 100%;
  height: 100%;
  background-size: cover;
  transition: 300ms ease;
}

#imageButton.start {
  background-image: url('Assets/Shapes/playButton.png');
}

#imageButton.pause {
  background-image: url('Assets/Shapes/pauseButton.png');
}

#startButton:hover:not(.inGame) {
  transform: scale(1.1);
  transition: all 300ms ease;
}

#menuButton {
  position: absolute;
  margin-left: calc(50vw - 40vmin);
  margin-right: calc(50vw + 40vmin);
  margin-top: calc(35vh - 25vmin);
  margin-bottom: calc(45vh + 30vmin);
  background-image: url('Assets/Shapes/cog.png');
  background-size: cover;
  z-index: 2;
  width: 10vmin;
  height: 10vmin;
  transform: scale(1);
  transition: all 300ms ease;
}

#menuButton.hide {
  transform: scale(0);
  transition: all 300ms ease-in;
}

#menuButton:hover {
  transform: scale(1.1);
  transition: all 300ms ease;
}

/* setting */

.backCardOption {
  width: 8vmin;
  height: 12vmin;
  border-radius: 1vmin;
  transition: all 300ms ease;
}
.backCardOption:hover {
  transform: scale(1.1);
  transition: all 300ms ease;
}

.difficultyOption {
  width: 16vmin;
  height: 16vmin;
  border-radius: 1vmin;
  transition: all 300ms ease;
}
.difficultyOption:hover {
  transform: scale(1.05);
  transition: all 300ms ease;
}

/* timer */

#timer {
  display: none;
  background-color: hsl(0, 90%, 20%);
  width: 100%;
  height: 20px;
  border-radius: 10px;
  box-shadow: 0 0 10px black;
}

#timerFill {
  height: 20px;
  border-radius: 10px;
  width: var(--timeRemaining);
  background-color: hsl(120, 60%, 60%);
  box-shadow: 0 0 5px black;

}

/* card */

.card {
  position: absolute;
  width: 7vmin;
  height: 10vmin;
  top: calc(var(--y) * 11vmin + 1vmin);
  left: calc(var(--x) * 8vmin + 1vmin);
  border-radius: 1vmin;
  transition: 500ms ease;
}

.card.hide {
  top: 100vh;
  left: 0;
}

.card-content {
  position: relative;
  width: 100%;
  height: 100%;
}

.card.visible .card-back {
  transform: rotateY(-180deg);
}

.card.visible .card-front {
  transform: rotateY(0);
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 1vmin;
}

.card-back {
  position: absolute;
  backface-visibility: hidden;
  width: 100%;
  height: 100%;
  transition: transform 300ms ease;
}

.card-back:hover {
  transform: scale(1.03, 1.03);
}

.card-front {
  position: absolute;
  backface-visibility: hidden;
  transform: rotateY(180deg);
  width: 100%;
  height: 100%;
  border-radius: 1vmin;
  transition: transform 300ms ease;
}